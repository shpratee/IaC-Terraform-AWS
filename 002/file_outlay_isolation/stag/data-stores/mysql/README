You can either configure the password in AWS Secret Manager and retrieve it in code using "aws_secretsmanager_secret_version" data source or
the second option for handling secrets is to manage them completely outside of Terraform (e.g., in a password manager such as 1Password, LastPass, or OS X Keychain) and to pass the secret into Terraform via an environment variable.

You can provide the value to any variable configured in Terraform configuration using TF_VAR_<Variable name> environment variable.
For e.g. to set the value of variable db_password in environment variable:

$ export TF_VAR_db_password=<DB Password>
$ terraform apply

No matter how you read in the secret, if you pass it as an argument to a Terraform resource, such as aws_db_instance, that secret will be stored in the Terraform state file, in plain text.

Some other supported secret stores

- AWS Secrets Manager and the aws_secretsmanager_secret_version data source
- AWS Systems Manager Parameter Store and the aws_ssm_parameter data source
- AWS Key Management Service (AWS KMS) and the aws_kms_secrets data source
- Google Cloud KMS and the google_kms_secret data source
- Azure Key Vault and the azurerm_key_vault_secret data source
- HashiCorp Vault and the vault_generic_secret data source
